/*!
 * imagesLoaded PACKAGED v4.1.1
 * JavaScript is all like "You images are done yet or what?"
 * MIT License
 */

/**
 * demo2.js
 * http://www.codrops.com
 *
 * Licensed under the MIT license.
 * http://www.opensource.org/licenses/mit-license.php
 *
 * Copyright 2019, Codrops
 * http://www.codrops.com
 */
{
	class TextFX {
		constructor(el) {
			this.DOM = { el: el };
			this.DOM.texts = [
				...this.DOM.el.querySelectorAll(".content__text"),
			];
			this.DOM.textsTotal = this.DOM.texts.length;
			this.middleIdx = Math.floor(this.DOM.textsTotal / 2);
			this.loopInterval = { show: 80, hide: 80 };
			this.loopEndIddleTime = this.loopInterval.show;
		}
		show({ dir = "both", halfwayCallback = null } = {}) {
			return new Promise((resolve, reject) => {
				const loopHide = (pos) => {
					if (this.middleIdx - pos === this.middleIdx) {
						setTimeout(resolve, this.loopEndIddleTime);
						return;
					}
					this.hideText(pos, dir);
					setTimeout(() => loopHide(pos - 1), this.loopInterval.hide);
				};
				const loopShow = (pos) => {
					if (this.middleIdx - pos > this.middleIdx) {
						if (
							halfwayCallback &&
							typeof halfwayCallback === "function"
						) {
							halfwayCallback();
						}
						loopHide(this.middleIdx);
						return;
					}
					this.showText(pos, dir);
					setTimeout(() => loopShow(pos - 1), this.loopInterval.show);
				};
				loopShow(this.middleIdx);
			});
		}
		hide({ dir = "both", halfwayCallback = null } = {}) {
			return new Promise((resolve, reject) => {
				const loopHide = (pos) => {
					if (this.middleIdx - pos < 0) {
						setTimeout(resolve, this.loopEndIddleTime);
						return;
					}
					this.hideText(pos, dir);
					setTimeout(() => loopHide(pos + 1), this.loopInterval.hide);
				};
				const loopShow = (pos) => {
					if (this.middleIdx - pos < 0) {
						if (
							halfwayCallback &&
							typeof halfwayCallback === "function"
						) {
							halfwayCallback();
						}
						loopHide(0);
						return;
					}
					this.showText(pos, dir);
					setTimeout(() => loopShow(pos + 1), this.loopInterval.show);
				};
				loopShow(1);
			});
		}
		hideText(pos, dir) {
			this.toggleText("hide", pos, dir);
		}
		showText(pos, dir) {
			this.toggleText("show", pos, dir);
		}
		toggleText(action, pos, dir) {
			const changeStyle = {
				up: (_) => {
					this.DOM.texts[this.middleIdx - pos].style.opacity =
						action === "show" ? 1 : 0;
					this.DOM.texts[
						this.middleIdx - pos
					].style.transform = `translateX(${
						pos === 0 && action === "show" ? 0 : -pos * 40
					}px)`;
				},
				down: (_) => {
					this.DOM.texts[this.middleIdx + pos].style.opacity =
						action === "show" ? 1 : 0;
					this.DOM.texts[
						this.middleIdx + pos
					].style.transform = `translateX(${
						pos === 0 && action === "show" ? 0 : pos * 40
					}px)`;
				},
			};
			if (dir === "both") {
				changeStyle["up"]();
				changeStyle["down"]();
			} else {
				changeStyle[dir]();
			}
		}
	}

	class Slide {
		constructor(el) {
			this.DOM = { el: el };
			this.DOM.img = {
				wrap: this.DOM.el.querySelector(".content__img"),
				inner: this.DOM.el.querySelector(".content__img-inner"),
			};
			this.textFX = new TextFX(
				this.DOM.el.querySelector(".content__text-wrap")
			);
		}
		hideImage(dir) {
			this.toggleImage("hide", dir);
		}
		showImage(dir) {
			this.toggleImage("show", dir);
		}
		toggleImage(action, dir) {
			new TimelineMax().add("begin").to(
				this.DOM.img.wrap,
				action === "hide" ? 0.6 : 1.2,
				{
					ease: action === "hide" ? Sine.easeInOut : Expo.easeOut,
					startAt:
						action === "hide"
							? {}
							: {
									x: dir === "next" ? "50%" : "-50%",
									y: dir === "next" ? "110%" : "-110%",
									opacity: 0,
									skewX: 20,
							  },
					x:
						action === "hide"
							? dir === "next"
								? "-50%"
								: "50%"
							: "0%",
					y:
						action === "hide"
							? dir === "next"
								? "-110%"
								: "110%"
							: "0%",
					skewX: action === "hide" ? 20 : 0,
					opacity: action === "hide" ? 0 : 1,
				},
				"begin"
			);
		}
	}

	class Slideshow {
		constructor(el) {
			this.DOM = { el: el };
			this.DOM.nav = {
				prev: this.DOM.el.querySelector(".content__nav-button--prev"),
				next: this.DOM.el.querySelector(".content__nav-button--next"),
			};
			this.slides = [];
			[...this.DOM.el.querySelectorAll(".content__slide")].forEach(
				(slide) => this.slides.push(new Slide(slide))
			);
			this.slidesTotal = this.slides.length;
			this.current = 0;
			this.slides[this.current].DOM.el.classList.add(
				"content__slide--current"
			);
			this.initEvents();
		}
		initEvents() {
			this.onClickPrevFn = (_) => this.navigate("prev");
			this.onClickNextFn = (_) => this.navigate("next");
			this.DOM.nav.prev.addEventListener("click", this.onClickPrevFn);
			this.DOM.nav.next.addEventListener("click", this.onClickNextFn);
		}
		navigate(dir) {
			if (this.isAnimating) {
				return false;
			}
			this.isAnimating = true;
			// Current slide
			const currentSlide = this.slides[this.current];

			// Update current
			this.current =
				dir === "next"
					? this.current < this.slidesTotal - 1
						? this.current + 1
						: 0
					: this.current > 0
					? this.current - 1
					: this.slidesTotal - 1;

			// Upcoming slide
			const upcomingSlide = this.slides[this.current];

			const onCurrentEndCallback = () => {
				currentSlide.DOM.el.classList.remove("content__slide--current");

				upcomingSlide.textFX.DOM.texts[
					upcomingSlide.textFX.middleIdx
				].style.opacity = 0;
				upcomingSlide.textFX
					.show()
					.then(() => (this.isAnimating = false));
				upcomingSlide.DOM.el.classList.add("content__slide--current");
				upcomingSlide.showImage(dir);
			};
			currentSlide.hideImage(dir);
			currentSlide.textFX.hide().then(onCurrentEndCallback);
		}
	}

	new Slideshow(document.querySelector(".content"));

	// Preload all the images in the page.
	imagesLoaded(
		document.querySelectorAll(".content__img-inner"),
		{ background: true },
		() => document.body.classList.remove("loading")
	);
}

!(function (t, e) {
	"function" == typeof define && define.amd
		? define("ev-emitter/ev-emitter", e)
		: "object" == typeof module && module.exports
		? (module.exports = e())
		: (t.EvEmitter = e());
})("undefined" != typeof window ? window : this, function () {
	function t() {}
	var e = t.prototype;
	return (
		(e.on = function (t, e) {
			if (t && e) {
				var i = (this._events = this._events || {}),
					n = (i[t] = i[t] || []);
				return -1 == n.indexOf(e) && n.push(e), this;
			}
		}),
		(e.once = function (t, e) {
			if (t && e) {
				this.on(t, e);
				var i = (this._onceEvents = this._onceEvents || {}),
					n = (i[t] = i[t] || {});
				return (n[e] = !0), this;
			}
		}),
		(e.off = function (t, e) {
			var i = this._events && this._events[t];
			if (i && i.length) {
				var n = i.indexOf(e);
				return -1 != n && i.splice(n, 1), this;
			}
		}),
		(e.emitEvent = function (t, e) {
			var i = this._events && this._events[t];
			if (i && i.length) {
				var n = 0,
					o = i[n];
				e = e || [];
				for (var r = this._onceEvents && this._onceEvents[t]; o; ) {
					var s = r && r[o];
					s && (this.off(t, o), delete r[o]),
						o.apply(this, e),
						(n += s ? 0 : 1),
						(o = i[n]);
				}
				return this;
			}
		}),
		t
	);
}),
	(function (t, e) {
		"use strict";
		"function" == typeof define && define.amd
			? define(["ev-emitter/ev-emitter"], function (i) {
					return e(t, i);
			  })
			: "object" == typeof module && module.exports
			? (module.exports = e(t, require("ev-emitter")))
			: (t.imagesLoaded = e(t, t.EvEmitter));
	})(window, function (t, e) {
		function i(t, e) {
			for (var i in e) t[i] = e[i];
			return t;
		}
		function n(t) {
			var e = [];
			if (Array.isArray(t)) e = t;
			else if ("number" == typeof t.length)
				for (var i = 0; i < t.length; i++) e.push(t[i]);
			else e.push(t);
			return e;
		}
		function o(t, e, r) {
			return this instanceof o
				? ("string" == typeof t && (t = document.querySelectorAll(t)),
				  (this.elements = n(t)),
				  (this.options = i({}, this.options)),
				  "function" == typeof e ? (r = e) : i(this.options, e),
				  r && this.on("always", r),
				  this.getImages(),
				  h && (this.jqDeferred = new h.Deferred()),
				  void setTimeout(
						function () {
							this.check();
						}.bind(this)
				  ))
				: new o(t, e, r);
		}
		function r(t) {
			this.img = t;
		}
		function s(t, e) {
			(this.url = t), (this.element = e), (this.img = new Image());
		}
		var h = t.jQuery,
			a = t.console;
		(o.prototype = Object.create(e.prototype)),
			(o.prototype.options = {}),
			(o.prototype.getImages = function () {
				(this.images = []),
					this.elements.forEach(this.addElementImages, this);
			}),
			(o.prototype.addElementImages = function (t) {
				"IMG" == t.nodeName && this.addImage(t),
					this.options.background === !0 &&
						this.addElementBackgroundImages(t);
				var e = t.nodeType;
				if (e && d[e]) {
					for (
						var i = t.querySelectorAll("img"), n = 0;
						n < i.length;
						n++
					) {
						var o = i[n];
						this.addImage(o);
					}
					if ("string" == typeof this.options.background) {
						var r = t.querySelectorAll(this.options.background);
						for (n = 0; n < r.length; n++) {
							var s = r[n];
							this.addElementBackgroundImages(s);
						}
					}
				}
			});
		var d = { 1: !0, 9: !0, 11: !0 };
		return (
			(o.prototype.addElementBackgroundImages = function (t) {
				var e = getComputedStyle(t);
				if (e)
					for (
						var i = /url\((['"])?(.*?)\1\)/gi,
							n = i.exec(e.backgroundImage);
						null !== n;

					) {
						var o = n && n[2];
						o && this.addBackground(o, t),
							(n = i.exec(e.backgroundImage));
					}
			}),
			(o.prototype.addImage = function (t) {
				var e = new r(t);
				this.images.push(e);
			}),
			(o.prototype.addBackground = function (t, e) {
				var i = new s(t, e);
				this.images.push(i);
			}),
			(o.prototype.check = function () {
				function t(t, i, n) {
					setTimeout(function () {
						e.progress(t, i, n);
					});
				}
				var e = this;
				return (
					(this.progressedCount = 0),
					(this.hasAnyBroken = !1),
					this.images.length
						? void this.images.forEach(function (e) {
								e.once("progress", t), e.check();
						  })
						: void this.complete()
				);
			}),
			(o.prototype.progress = function (t, e, i) {
				this.progressedCount++,
					(this.hasAnyBroken = this.hasAnyBroken || !t.isLoaded),
					this.emitEvent("progress", [this, t, e]),
					this.jqDeferred &&
						this.jqDeferred.notify &&
						this.jqDeferred.notify(this, t),
					this.progressedCount == this.images.length &&
						this.complete(),
					this.options.debug && a && a.log("progress: " + i, t, e);
			}),
			(o.prototype.complete = function () {
				var t = this.hasAnyBroken ? "fail" : "done";
				if (
					((this.isComplete = !0),
					this.emitEvent(t, [this]),
					this.emitEvent("always", [this]),
					this.jqDeferred)
				) {
					var e = this.hasAnyBroken ? "reject" : "resolve";
					this.jqDeferred[e](this);
				}
			}),
			(r.prototype = Object.create(e.prototype)),
			(r.prototype.check = function () {
				var t = this.getIsImageComplete();
				return t
					? void this.confirm(
							0 !== this.img.naturalWidth,
							"naturalWidth"
					  )
					: ((this.proxyImage = new Image()),
					  this.proxyImage.addEventListener("load", this),
					  this.proxyImage.addEventListener("error", this),
					  this.img.addEventListener("load", this),
					  this.img.addEventListener("error", this),
					  void (this.proxyImage.src = this.img.src));
			}),
			(r.prototype.getIsImageComplete = function () {
				return this.img.complete && void 0 !== this.img.naturalWidth;
			}),
			(r.prototype.confirm = function (t, e) {
				(this.isLoaded = t),
					this.emitEvent("progress", [this, this.img, e]);
			}),
			(r.prototype.handleEvent = function (t) {
				var e = "on" + t.type;
				this[e] && this[e](t);
			}),
			(r.prototype.onload = function () {
				this.confirm(!0, "onload"), this.unbindEvents();
			}),
			(r.prototype.onerror = function () {
				this.confirm(!1, "onerror"), this.unbindEvents();
			}),
			(r.prototype.unbindEvents = function () {
				this.proxyImage.removeEventListener("load", this),
					this.proxyImage.removeEventListener("error", this),
					this.img.removeEventListener("load", this),
					this.img.removeEventListener("error", this);
			}),
			(s.prototype = Object.create(r.prototype)),
			(s.prototype.check = function () {
				this.img.addEventListener("load", this),
					this.img.addEventListener("error", this),
					(this.img.src = this.url);
				var t = this.getIsImageComplete();
				t &&
					(this.confirm(0 !== this.img.naturalWidth, "naturalWidth"),
					this.unbindEvents());
			}),
			(s.prototype.unbindEvents = function () {
				this.img.removeEventListener("load", this),
					this.img.removeEventListener("error", this);
			}),
			(s.prototype.confirm = function (t, e) {
				(this.isLoaded = t),
					this.emitEvent("progress", [this, this.element, e]);
			}),
			(o.makeJQueryPlugin = function (e) {
				(e = e || t.jQuery),
					e &&
						((h = e),
						(h.fn.imagesLoaded = function (t, e) {
							var i = new o(this, t, e);
							return i.jqDeferred.promise(h(this));
						}));
			}),
			o.makeJQueryPlugin(),
			o
		);
	});
